from tkinter import *
import random
from math import*
class calculadora():
	#error pponer muchos puntos
	
	def botonPulsado(self,num):
		texto=self.numeroPantalla.get()+num
		print("valor string: ",texto, "valor posicion 0: ",texto[0], " y longitud:", len(texto))
		if texto[0] =="0" and len(texto)>1 and texto[1]==self.separador:
			print("se conserva el 0")
		elif texto[0] =="0" and len(texto)==1:
			print("es cero a la izquierda y pudiera ser que luego en algun caso se introduzca ,")
		elif texto[0] != "0" :
			print("no hay problema")
		elif texto[0] =="0" and len(texto)>1 :
			print("es cero a la izquierda y habria que sustituirlo")
			texto=texto[1:]

		self.numeroPantalla.set(texto)

	def borrartodo(self):
		self.numeroPantalla.set("0")

	def borrarnum(self):
		numero=self.numeroPantalla.get()
		self.numeroPantalla.set(numero[:-1])
	def prueba(self):
		texto=self.numeroPantalla.get()
		print("valor posicion 0: ",texto[0], " y longitud:", len(texto))
		if texto[0] =="0" and len(texto)>=2 and texto[1]==self.separador:
			print("se conserva el 0")
		elif texto[0] =="0" and len(texto)==1:
			print("es cero a la izquierda y pudiera ser que luego en algun caso se introduzca ,")
		
		elif texto[0] != "0" :
			print("no hay problema")
		elif texto[0] =="0" and len(texto)>=2 :
			print("es cero a la izquierda y habria que sustituirlo")


			
			

	#	print("En numeroPantalla.get() tengo...",numeroPantalla.get(), " y soy  tipo... ",type(numeroPantalla.get()))
	#def cambiarNumeros():
	#	boton0["text"]=random.randint(0,20)
	#	boton1["text"]=random.randint(0,20)
	#	boton2["text"]=str(random.randint(0,20))
	#	boton3["text"]=str(random.randint(0,20))	
	#	boton6["text"]=str(random.randint(0,20))
	#	boton7["text"]=random.randint(0,20)
	#	boton8["text"]=str(random.randint(0,20))	
	#	boton9["text"]=str(random.randint(0,20))


	#-----FUNCION SUMA----------
	def operaciones(self,operacion):
		print("recibo operacion: ",operacion)
		self.operador=operacion
		print("mi operador guardado en la funcion: ",self.operador)
		self.num1=float(self.numeroPantalla.get())
		self.numeroPantalla.set("")


	'''
	def suma():
		
		global operador
		operador="+"
		global num1
		num1=int(numeroPantalla.get())
		print("estoy en una suma")
		print ("operador en suma",operador)
		numeroPantalla.set("")

	def resta():
		global operador
		operador="-"
		global num1
		num1=int(numeroPantalla.get())
		print("estoy en ressta")
		print("operador en resta",operador)
		numeroPantalla.set("")

	def multiplicacion():
		global operador
		operador="X"
		global num1
		num1=int(numeroPantalla.get())
		print("estoy en multipl")
		print("operador en multipl",operador)
		numeroPantalla.set("")	

	def dividir():
		global operador
		operador="/"
		#global num1
		#num1=int(numeroPantalla.get())
		print("estoy en division")
		print("operador en division",operador)
		numeroPantalla.set("")
	'''


	def igual(self):
		
		self.resultado=""
		print("En igual operador tiene valor: ", self.operador)
		self.num2=float(self.numeroPantalla.get())
		print("Valor num1: ",self.num1, " y valor num2: ", self.num2)
		if self.operador=="+":
			self.resultado=self.num1+self.num2
		elif self.operador=="-":
			self.resultado=self.num1-self.num2
		elif self.operador=="X":
			self.resultado=self.num1*self.num2
		elif self.operador=="/":
			self.resultado=self.num1/self.num2
		else:
			self.resultado="ERROR"
		if str(self.resultado).endswith(".0"):
			'''endswith lo uso para saber el final de una cadena de caracteres'''
			self.resultado=int(self.resultado)
			print("he cambiado el resultado de float a entero")
	


		'''if  self.resultado==int(self.resultado):
			self.resultado=int(self.resultado)'''	
		
		
		self.numeroPantalla.set(self.resultado)
		print(type(self.numeroPantalla))
		print(type(self.numeroPantalla.get()))
	
	def inicio_calculadora(self):
		self.raiz=Tk()
		self.raiz.eval('tk::PlaceWindow . center')
		self.miFrame=Frame(self.raiz)
		self.miFrame.pack()


		#----------PANTALLA----------
		self.numeroPantalla=StringVar()
		self.num1=0
		self.num2=0
		self.resultado=0
		self.operador=""
		self.separador="."


		self.pantalla=Entry(self.miFrame,textvariable=self.numeroPantalla)
		self.pantalla.grid(row=1, column=1, padx=10, pady=10, columnspan=4)
		self.pantalla.config(background="black",fg="#7879b2", justify="right")


		#global num1
		#num1=int(numeroPantalla.get())
		#------PULSACIONES TECLADO----------

			
			









		#--------FILA 1 NUMEROS---------
		boton7=Button(self.miFrame, text="7", width=3,command=lambda:self.botonPulsado(boton7['text']))
		boton7.grid(row=2, column=1)
		boton8=Button(self.miFrame, text="8", width=3,command=lambda:self.botonPulsado(boton8['text']))
		boton8.grid(row=2, column=2)
		boton9=Button(self.miFrame, text="9", width=3,command=lambda:self.botonPulsado(boton9['text']))
		boton9.grid(row=2, column=3)
		botondiv=Button(self.miFrame, text="/", width=3,command=lambda:calculadora.operaciones(botondiv['text']))
		botondiv.grid(row=2, column=4)


		#-------FILA 2 NUMEROS-----------
		boton4=Button(self.miFrame, text="4", width=3, command=lambda:self.botonPulsado(boton4['text']))
		boton4.grid(row=3, column=1)
		boton5=Button(self.miFrame, text="5", width=3,command=lambda:self.botonPulsado(boton5['text']))
		boton5.grid(row=3, column=2)
		boton6=Button(self.miFrame, text="6", width=3,command=lambda:self.botonPulsado(boton6['text']))
		boton6.grid(row=3, column=3)
		botonmult=Button(self.miFrame, text="X", width=3,command=lambda:self.operaciones(botonmult['text']))
		botonmult.grid(row=3, column=4)

		#------FILA 3 NUMEROS --------
		boton1=Button(self.miFrame, text="1", width=3,command=lambda:self.botonPulsado(boton1['text']))
		boton1.grid(row=4, column=1)
		boton2=Button(self.miFrame, text="2", width=3,command=lambda:self.botonPulsado(boton2['text']))
		boton2.grid(row=4, column=2)
		boton3=Button(self.miFrame, text="3", width=3,command=lambda:self.botonPulsado(boton3['text']))
		boton3.grid(row=4, column=3)
		botonrest=Button(self.miFrame, text="-", width=3,command=lambda:self.operaciones(botonrest['text']))
		botonrest.grid(row=4, column=4)


		#------FILA 4 NUMEROS--------
		botoncoma=Button(self.miFrame, text=self.separador, width=3,command=lambda:self.botonPulsado(botoncoma['text']))
		botoncoma.grid(row=5, column=1)
		boton0=Button(self.miFrame, text="0", width=3,command=lambda:self.botonPulsado(boton0['text']))
		boton0.grid(row=5, column=2)
		botonigual=Button(self.miFrame, text="=", width=3,command=lambda:self.igual())
		botonigual.grid(row=5, column=3)
		botonsuma=Button(self.miFrame, text="+", width=3,command=lambda:self.operaciones(botonsuma['text']))
		botonsuma.grid(row=5, column=4)

		#-------FILA TECLA BORRAR---------
		botonborrar=Button(self.miFrame,text="C", width=9,command=lambda:self.borrartodo())
		botonborrar.grid(row=6, column=2,columnspan=2)

		#------FILA BOTON BORRAR 1 DIGITO------
		botonborultnum=Button(self.miFrame, text="<--",width=3, command=lambda:self.borrarnum() )
		botonborultnum.grid(row=6, column=1)

		botonprueba=Button(self.miFrame, text="?",width=3 , command= lambda:self.prueba())
		botonprueba.grid(row=6, column=5)


		self.numeroPantalla.set("0")
		print(type(self.numeroPantalla.get()))


		self.raiz.mainloop()
		#b = "1234"
		#print(b[:-1])




		"""
			*funciones de operaciones,+ - * /
			*guardar numeros para operar
			*poner 0 al comenzr la calculadora y que se borre cuando pulsamos otro numero
			*pner tecla de borrado

			*eliminar 0 a la izquierda"""

calc=calculadora()	 
calc.inicio_calculadora()